@using Bytescout.BarCodeReader
@{ string scr = ViewBag.Img;
   FoundBarcode[] barcodes = ViewBag.Barcodes;
 }

<html xmlns="http://www.w3.org/1999/xhtml">
@{ ViewBag.Title = "Ad_hoc_label";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml"; }

@Html.Raw(TempData["msg"])


<head>

    <script src="~/Scripts/index.js"></script>
    <script src="~/Scripts/jquery-3.6.0.min.js"></script>
    <link href="~/Css/index.css" rel="stylesheet" />
    

    @{ var userInput = TempData["UserInput"] as string; }
    @{var uRegRef = TempData["uRegRef"] as string; }

    <script>
    $(document).ready(function () {
    var userInput = '@userInput';
    if (userInput) {
        $('#inputAllField').show(); // show the div element
        } else {
        $('#inputAllField').hide(); // hide the div element
    }
    });
    </script>
</head>
<body>

    <div class="upload_image">
        @* <h3>Barcodes From Image (scans for all type of barcodes)</h3>*@
        @*<form action="/home/index" method="post" enctype="multipart/form-data">
                <input type="file" name="file" />
                <input type="submit" value="Upload file" />
            </form>*@
        @if (barcodes != null)
        {
            <select multiple>
                @foreach (FoundBarcode item in barcodes)
                {
                    <option>@String.Format("{0} : {1}", item.Type, item.Value)</option>
                }
            </select>}
        @if (scr != null)
        {
            <img src="/@scr" />}


    </div>
    <div class="line"></div>
    <div class="upload_camera">
        @*<h3>Barcodes From Camera</h3>*@
        @*<div class="camera-container">*@
        <div id="userMedia" style="display:none; height: 500px; width: 1182px">
            <div class="w3-container ccc">
                <div class="w3-row-padding">
                    <table>
                        <tr align="left" valign="top">
                            <td valign="top">
                                <h4 id="choiceU"> <b>Barcode Type To Scan (to start barcode scan - click START below)</b></h4>

                                <select id="comboBoxBarCodeTypeHTML5" onchange="selectType(this)" hidden>
                                    <option value="1">All Barcodes (slow)</option>
                                    <option value="2">All Linear Barcodes (Code39, Code 128, EAN 13, UPCA, UPCE, etc.)</option>
                                    <option value="3">All 2D Barcodes (QR Code, Aztec, DataMatrix, PDF417, etc.)</option>
                                    <option value="4">Code 39c</option>
                                    <option value="5">Code 128</option>
                                    <option value="6">EAN 13</option>
                                    <option value="7">UPCA</option>
                                    <option value="8">GS1-128</option>
                                    <option value="9">GS1DataBarExpanded</option>
                                    <option value="10">GS1DataBarExpandedStacked </option>
                                    <option value="11">GS1DataBarLimited</option>
                                    <option value="12">GS1DataBarOmnidirectional</option>
                                    <option value="13">GS1DataBarStacked</option>
                                    <option value="14">I2of5</option>
                                    <option value="15">Intelligent Mail</option>
                                    <option value="16">Patch Code</option>
                                    <option value="17">PDF 417</option>
                                    <option value="18">QR Code</option>
                                    <option value="19">Datamatrix</option>
                                    <option value="20">Aztec</option>
                                    <option value="21">MaxiCode</option>
                                </select>

                                <span style=" font-size:18px; ">Output barcode values read appears below: </span>
                                <br />
                                <form method="post" action="Validate">
                                    <!-- decoding results appears in this listbox -->
                                    @*<textarea style="width:500px; height:100px;" size="8" id="OutListBoxHTML5"></textarea>*@
                                    <input type="text" id="OutListBoxHTML5" class="w3-border" name="uRegRef" value="@uRegRef" />&nbsp;<input id="Validate" style="color: black; font-size: small; font-weight: bold;" type="submit" value="Validate" />
                                </form>
                                <br />
                                <input id="snap" style="color:black; font-weight:bold; font-size:small;" type="button" onclick="UploadToCloud();" value="START READING BARCODES..." />

                                <input id="pause" style="color: black; font-size: small; font-weight: bold;" type="button" onclick="stopCall();" value="STOP" />
                                <input id="ClearText" style="color: black; font-size: small; font-weight: bold;" type="button" onclick="Clear();" value="Clear" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <h4 id="report"></h4>



                            </td>
                            <td valign="top">
                                <div class="camera-container">
                                    <span id="WebcamPreview" hidden>Webcam preview shows below:</span>

                                    <video id="video" width="640" height="400" hidden autoplay playsinline muted></video>

                                    <!-- canvas with the output -->
                                    <canvas id="canvasU" width="640" height="400" style="display:none"></canvas>
                                </div>

                            </td>
                        </tr>
                    </table>
                </div>
            </div>



            <form name="AdhocLabel" id="AdhocLabel">
                <div class="w3-container" id="inputAllField" hidden>
                    <div class="w3-row-padding">
                        <div class="w3-quarter">
                            <label>Inventory No</label>
                            <input class="w3-input w3-border" type="text" id="AdhocInventory">
                        </div>
                        <div class="w3-quarter">
                            <label>Work Order No</label>
                            <input class="w3-input w3-border" type="text" id="AdhocWorkOrder">
                        </div>
                        <div class="w3-quarter">
                            <label>Serial No</label>
                            <input class="w3-input w3-border" type="text" id="AdhocSerialNo">
                        </div>
                        <div class="w3-quarter">
                            <label>Operation Activity No</label>
                            <input class="w3-input w3-border" type="text" id="AdhocOpActivity">
                        </div>
                    </div>
                    @*<br />*@
                    <div class="w3-row-padding">


                        <div class="w3-quarter">
                            <label>Manufacturer</label>
                            <input class="w3-input w3-border" type="text" id="AdhocManufacture">
                        </div>
                        <div class="w3-quarter">
                            <label>Transformer</label>
                            @*<input class="w3-input w3-border" type="text" id="AdhocTransformer">*@
                            <select class="w3-input w3-border" id="AdhocTransformer" name="StudentGender">
                                <option value="0">--Select--</option>
                            </select>
                        </div>
                        <div class="w3-quarter">
                            <label>Sub Name</label>
                            <input class="w3-input w3-border" type="text" id="AdhocSubName">
                        </div>
                        <div class="w3-quarter">
                            <label>Sample</label>
                            <input class="w3-input w3-border" type="text" id="AdhocSample">
                        </div>


                    </div>


                    @*<br />*@
                    <div class="w3-row-padding">

                        <div class="w3-quarter">
                            <label>Sub Prefix</label>
                            <input class="w3-input w3-border" type="text" id="AdhocSubPrefix">
                        </div>
                        <div class="w3-quarter">
                            <label>Winding</label>
                            <input class="w3-input w3-border" type="text" id="AdhocWinding">
                        </div>
                        <div class="w3-quarter">
                            <label>Sub no</label>
                            <input class="w3-input w3-border" type="text" id="AdhocSubNo">
                        </div>
                        <div class="w3-quarter">
                            <label>Ambient</label>
                            <input class="w3-input w3-border" type="text" id="AdhocAmbient">
                        </div>
                    </div>

                    <div class="w3-row-padding">


                        <div class="w3-quarter">
                            <label>Position No</label>
                            <input class="w3-input w3-border" type="text" id="AdhocPositionNo">
                        </div>
                        <div class="w3-quarter">
                            <label>Equipment</label>
                            <input class="w3-input w3-border" type="text" id="AdhocEquipment">
                        </div>
                        <div class="w3-quarter">
                            <label>Test Reason</label>
                            <select class="w3-input w3-border" id="AdhocTestReason" onchange="if (this.options[this.selectedIndex].value =='Other'){document.AdhocLabel['Other'].style.visibility='visible'}else {document.AdhocLabel['Other'].style.visibility='hidden'};">
                                <option value="Routine">Routine</option>
                                <option value="Follow-up">Follow Up</option>
                                <option value="Other">Other</option>
                                @*<option value="2">Apply Multiple Lims1 Client Ref</option>*@
                            </select>
                            @*<input class="w3-input w3-border" type="text" placeholder="Job Status">*@
                        </div>
                        <div class="w3-quarter">
                            <br />
                            <input class="w3-input w3-border" type="text" id="TXTAdhocOther" name="Other" style="visibility:hidden;">
                        </div>
                        <!--<div class="w3-quarter">
                        <label>Test Reason</label>-->
                            @*<input class="w3-input w3-border" type="text" id="AdhocTestReason">*@
                            <!--<select class="w3-input w3-border" id="AdhocTestReason" name="StudentGender">
                                <option value="Routine">Routine</option>
                                <option value="Follow-up">Follow Up</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>-->
                        @*<div class="w3-quarter">
                            <label>Equipment</label>
                            <input class="w3-input w3-border" type="text" id="AdhocEquipment">
                        </div>*@



                    </div>
                    @*<br />*@
                    <div class="w3-row-padding">
                        <div class="w3-quarter">
                            <label>Comment</label>
                            <input class="w3-input w3-border" type="text" id="AdhocComment">
                        </div>
                        <div class="w3-quarter">
                            <label>Sample Point (DGA) </label>
                            @*<input class="w3-input w3-border" type="text" id="AdhocDGA">*@
                            <select class="w3-input w3-border" id="AdhocDGA" name="StudentGender">
                                <option value="0">--Select--</option>
                            </select>
                        </div>
                        <div class="w3-quarter">
                            <label>Sample Point (Oil Screen)</label>
                            @*<input class="w3-input w3-border" type="text" id="AdhocOIL">*@
                            <select class="w3-input w3-border" id="AdhocOIL" name="StudentGender">
                                <option value="0">--Select--</option>
                            </select>
                        </div>
                        <div class="w3-quarter">
                            <label>Clref</label>
                            @*<input class="w3-input w3-border" type="text" id="AdhocClref">*@
                            <select class="w3-input w3-border" id="AdhocClref" name="StudentGender">
                                <option value="0">--Select--</option>
                            </select>
                        </div>

                    </div>
                </div>
            </form>
            <div class="w3-container">
                @*<br />*@
                @*--------------------Read only field---------------------*@
                <br />
                <div class="w3-row-padding">
                    <div class="w3-quarter">
                        <label>Date Sampled</label>
                        <input class="w3-input w3-border" id="TXTDate" type="date" placeholder="Date Sampled">
                    </div>
                    <div class="w3-quarter">
                        <label>Sampled by</label>
                        <input class="w3-input w3-border" type="text" placeholder="Sampled by" id="AdhocsampledBy" readonly>
                    </div>
                </div>
            </div>
        </div>

        <!-- Flash (SWF) camera based capturing section -->
        <!-- this div block will be shown when browser does not support user media so the only way is to capture with flash (swf) camera -->
        <div id="flashDiv" style=" display:none; ">
            <table>
                <tr align="left" valign="top">
                    <td colspan="2"><h5 style=" color:Green; ">(FLASH based camera) This works in Internet Explorer 9+, Chrome, Firefox and other browsers with flash support. To enable web-cam access answer ALLOW when asked if you want to give access to webcam </h5></td>
                </tr>
                <tr align="left" valign="top">
                    <td valign="top">
                        <h4 id="choice"> <b>Barcode Type To Scan (to start barcode scan - click START below)</b></h4>
                        <br />
                        <select id="comboBoxBarCodeTypeFlash" onchange="selectType(this)">
                            <option value="1">All Barcodes (slow)</option>
                            <option value="2">All Linear Barcodes (Code39, Code 128, EAN 13, UPCA, UPCE, etc.)</option>
                            <option value="3">All 2D Barcodes (QR Code, Aztec, DataMatrix, PDF417, etc.)</option>
                            <option value="4">Code 39</option>
                            <option value="5">Code 128</option>
                            <option value="6">EAN 13</option>
                            <option value="7">UPCA</option>
                            <option value="8">GS1-128</option>
                            <option value="9">GS1DataBarExpanded</option>
                            <option value="10">GS1DataBarExpandedStacked </option>
                            <option value="11">GS1DataBarLimited</option>
                            <option value="12">GS1DataBarOmnidirectional</option>
                            <option value="13">GS1DataBarStacked</option>
                            <option value="14">I2of5</option>
                            <option value="15">Intelligent Mail</option>
                            <option value="16">Patch Code</option>
                            <option value="17">PDF 417</option>
                            <option value="18">QR Code</option>
                            <option value="19">DataMatrix</option>
                            <option value="20">Aztec</option>
                            <option value="21">MaxiCode</option>
                        </select>
                        <br />
                        <span style=" font-size:20px; ">Output barcode values read appears below: </span>
                        <br />
                        <!-- decoding results appears in this listbox -->
                        <textarea style="width:500px; height:100px;" size="8" id="OutListBoxFlash"> </textarea>
                        <br />
                        <input type="button" style="color:black; font-weight:bold; font-size:large;" value="START READING BARCODES.." onclick="take_snapshot()" /> &nbsp;&nbsp;&nbsp;
                        <br />
                        <input type="button" style="color:black; font-weight:bold; font-size:large;" value="STOP" onclick="stopScanning()" />
                        <br />
                        <div id="upload_results" style="background-color:#eee;"></div>
                    </td>
                    <td>
                        <div id="flashOut"> </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <br />

    <div class="w3-container">
        <div class="w3-row-padding" style="margin-right:0.5%;">
            <button class="w3-button w3-black_tab w3-right" id="printButton">Print PDF</button>
        </div>
        <br />
    </div>


    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script src="~/Scripts/jquery.datetimepicker.js"></script>
    <script src="jquery-ui-timepicker-addon.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            BindTransformer();
            BindSmPointDGA();
            BindSmPointOIL();
            BindClref();

            var date = new Date();
            //alert(date.toDateString());
            var dateString = date.toISOString().substr(0, 10);
            $("input[type='date']").val(dateString);

            var today = new Date().toISOString().split('T')[0];
            document.getElementById("TXTDate").setAttribute('max', today);
        });

        function PDFgenerate() {
            $.ajax({
                type: 'post',
                url: "/Dashboard/GeneratePDF1",
                dataType: 'json',
                success: function (data) {
                    // Handle the response from the server
                    alert('Success')
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    // Handle errors
                }
            });
        }

        // For Transformer
        function BindTransformer() {
            //debugger;
            $.ajax({
                type: 'post',
                url: "/Dashboard/BindTransformer",
                data: '{}',
                success: function (p) {
                    if (typeof p === "undefined" || p.length === 0) {
                        alert("Transformer not present for user!!");
                    } else {
                        p = JSON.parse(p);
                    }
                    //p = JSON.parse(p);
                    //alert(''+p);

                    $("#TXTtransformer").find("tr:gt(0)").remove();

                    for (var i = 0; i < p.length; i++) {
                        $("#TXTtransformer").append($('<option/>').attr("value", p[i].Transformer).text(p[i].Transformer));
                    }

                    // For AdhocTransformer
                    $("#AdhocTransformer").find("tr:gt(0)").remove();

                    for (var i = 0; i < p.length; i++) {
                        $("#AdhocTransformer").append($('<option/>').attr("value", p[i].Transformer).text(p[i].Transformer));
                    }
                },
                error: function () {
                    alert('Transformer data not found !!');
                }

            });
        }

        //For Sampling Point DGA   TXTSamplePoint
        function BindSmPointDGA() {
            //debugger;
            $.ajax({
                type: 'post',
                url: "/Dashboard/BindSmPointDGA",
                data: '{}',
                success: function (p) {
                    if (typeof p === "undefined" || p.length === 0) {
                        alert("Transformer not present for user!!");
                    } else {
                        p = JSON.parse(p);
                    }
                    //p = JSON.parse(p);
                    //alert(''+p);

                    $("#TXTSamplePoint").find("tr:gt(0)").remove();

                    for (var i = 0; i < p.length; i++) {
                        $("#TXTSamplePoint").append($('<option/>').attr("value", p[i].ValStr).text(p[i].ValStr));
                    }

                    // For Sampling Point AdhocDGA
                    $("#AdhocDGA").find("tr:gt(0)").remove();

                    for (var i = 0; i < p.length; i++) {
                        $("#AdhocDGA").append($('<option/>').attr("value", p[i].ValStr).text(p[i].ValStr));
                    }
                },
                error: function () {
                    alert('Ad Hoc DGA data not found !!');
                }

            });
        }

        //For sampling Point OIL TXTSamplePOil & AdhocTransformer
        function BindSmPointOIL() {
            //debugger;
            $.ajax({
                type: 'post',
                url: "/Dashboard/BindSmPointOIL",
                data: '{}',
                success: function (p) {
                    if (typeof p === "undefined" || p.length === 0) {
                        alert("Transformer not present for user!!");
                    } else {
                        p = JSON.parse(p);
                    }
                    //p = JSON.parse(p);
                    //alert(''+p);

                    $("#TXTSamplePOil").find("tr:gt(0)").remove();

                    for (var i = 0; i < p.length; i++) {
                        $("#TXTSamplePOil").append($('<option/>').attr("value", p[i].ValStr).text(p[i].ValStr));
                    }

                    // For AdhocOIL
                    $("#AdhocOIL").find("tr:gt(0)").remove();

                    for (var i = 0; i < p.length; i++) {
                        $("#AdhocOIL").append($('<option/>').attr("value", p[i].ValStr).text(p[i].ValStr));
                    }
                },
                error: function () {
                    alert('Sampling Point OIL data not found !!');
                }

            });
        }

        //BindClref
        function BindClref() {
            //debugger;
            $.ajax({
                type: 'post',
                url: "/Dashboard/BindClref2",
                data: '{}',
                success: function (p) {
                    if (typeof p === "undefined" || p.length === 0) {
                        alert("Clref not present for user!!");
                    } else {
                        p = JSON.parse(p);
                    }
                    //p = JSON.parse(p);
                    //alert(''+p);

                    $("#AdhocClref").find("tr:gt(0)").remove();

                    for (var i = 0; i < p.length; i++) {
                        $("#AdhocClref").append($('<option/>').attr("value", p[i].AdhocClref).text(p[i].AdhocClref));
                    }

                },
                error: function () {
                    alert('Clref data not found !!');
                }

            });
        }
    </script>

    @*<script>
            // Attach click event handler to the button
            document.getElementById("printButton").addEventListener("click", function () {
                // Send request to download the PDF
                var xhr = new XMLHttpRequest();
                xhr.open("GET", "/Dashboard/GeneratePDF1", true); // Replace with your controller and action method names
                xhr.responseType = "blob";
                xhr.onload = function () {
                    if (this.status === 200) {
                        var blob = this.response;
                        var url = URL.createObjectURL(blob);

                        // Open new window or iframe with the PDF URL
                        var printWindow = window.open(url);
                        printWindow.onload = function () {
                            printWindow.print(); // Trigger the PDF viewer's print functionality
                        };
                    }
                };
                xhr.send();
            });
        </script>*@

    <script>
        // Attach click event handler to the button
       
        document.getElementById("printButton").addEventListener("click", function () {
            var testReson = "";
            alert('' + $("#AdhocTestReason").val());
            if ($("#AdhocTestReason").val() === 'Other') {
                testReson = $("#TXTAdhocOther").val();
            }
            else {
                testReson = $("#AdhocTestReason").val();
            }
            // Get the values of the textboxes
            var textBoxValues = [];
            textBoxValues.push(document.getElementById("OutListBoxHTML5").value);
            textBoxValues.push(document.getElementById("AdhocInventory").value);
            textBoxValues.push(document.getElementById("AdhocWorkOrder").value);
            textBoxValues.push(document.getElementById("AdhocSerialNo").value);
            textBoxValues.push(document.getElementById("AdhocOpActivity").value);
            textBoxValues.push(document.getElementById("AdhocManufacture").value);
            textBoxValues.push(document.getElementById("AdhocTransformer").value);
            textBoxValues.push(document.getElementById("AdhocSubName").value);
            textBoxValues.push(document.getElementById("AdhocSample").value);

            textBoxValues.push(document.getElementById("AdhocSubPrefix").value);
            textBoxValues.push(document.getElementById("AdhocWinding").value);
            textBoxValues.push(document.getElementById("AdhocSubNo").value);
            textBoxValues.push(document.getElementById("AdhocAmbient").value);
            textBoxValues.push(document.getElementById("AdhocPositionNo").value);

            //textBoxValues.push(document.getElementById("AdhocTestReason").value);
            textBoxValues.push(testReson);

            textBoxValues.push(document.getElementById("AdhocEquipment").value);
            textBoxValues.push(document.getElementById("AdhocComment").value);

            textBoxValues.push(document.getElementById("TXTDate").value);
            textBoxValues.push(document.getElementById("AdhocDGA").value);
            textBoxValues.push(document.getElementById("AdhocsampledBy").value);
            textBoxValues.push(document.getElementById("AdhocOIL").value);
            textBoxValues.push(document.getElementById("AdhocClref").value);
            // Build the query parameters for the URL
            var queryParams = "";
            for (var i = 0; i < textBoxValues.length; i++) {
                var param = "textBoxValue" + (i + 1);
                var value = encodeURIComponent(textBoxValues[i]);
                queryParams += param + "=" + value + "&";
            }

            // Remove the trailing '&' character
            queryParams = queryParams.slice(0, -1);

            // Send request to download the PDF
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "/Dashboard/GeneratePDF1?" + queryParams, true); // Replace with your controller and action method names
            xhr.responseType = "blob";
            xhr.onload = function () {
                if (this.status === 200) {
                    var blob = this.response;
                    var url = URL.createObjectURL(blob);

                    // Open new window or iframe with the PDF URL
                    var printWindow = window.open(url);
                    printWindow.onload = function () {
                        printWindow.print(); // Trigger the PDF viewer's print functionality
                    };
                }
            };
            xhr.send();
        });
    </script>
</body>
</html>